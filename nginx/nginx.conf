worker_processes 1;

events {
  worker_connections 512;
}

http {
  # Enable gzip compression to reduce bandwidth usage
  gzip on;
  gzip_proxied any;
  gzip_types text/plain application/json;
  gzip_min_length 1000;

  # Set buffer sizes to optimize memory usage
  client_body_buffer_size 16k;
  client_max_body_size 1m;
  client_header_buffer_size 1k;
  large_client_header_buffers 2 1k;

  # Disable access logs
  access_log off;

  server {
    listen 80;
    server_name 34.225.32.56;
    return 301 https://$server_name$request_uri;
  }

  server {
    listen 443 ssl;
    http2 on; # Enable HTTP/2 for SSL connections
    server_name 34.225.32.56;

    # SSL configuration
    ssl_certificate /etc/nginx/certificates/selfsigned.crt;
    ssl_certificate_key /etc/nginx/certificates/selfsigned.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
      # Restrict to specific HTTP methods
      if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE)$) {
        return 405;
      }
      proxy_pass http://corsproxy:5000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}

